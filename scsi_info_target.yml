---
- name: Retrieve and Display Detailed Disk Information
  hosts: all
  become: yes
  gather_facts: no

  vars:
    mount_point: "/app"  # Specify the mount point

  tasks:
    - name: Gather filesystem facts for specific mount
      ansible.builtin.setup:
        gather_subset:
          - mounts

    - name: Extract and set disk facts
      set_fact:
        mount_details: "{{ item }}"
      loop: "{{ ansible_mounts }}"
      when: item.mount == mount_point
      no_log: false  # Enable logging to debug issues

    - name: Determine the block device for the LVM volume
      ansible.builtin.shell: |
        lsblk -no PKNAME $(df --output=source {{ mount_point }} | tail -n1)
      register: physical_disk_result
      changed_when: false
      no_log: false  # Enable logging to debug issues

    - name: Check physical disk result
      ansible.builtin.fail:
        msg: "Failed to determine the physical disk."
      when: physical_disk_result.stdout == ""

    - name: Get SCSI information from lsblk
      ansible.builtin.shell: |
        lsblk -no HCTL /dev/{{ physical_disk_result.stdout | trim }}
      register: scsi_info_result
      changed_when: false
      no_log: false  # Enable logging to debug issues

    - name: Display combined information
      ansible.builtin.debug:
        msg: >
          Mount: {{ mount_point }},
          Disk: /dev/{{ physical_disk_result.stdout | trim }},
          SCSI Info: {{ scsi_info_result.stdout | default('N/A') | regex_replace('^([0-9]+):([0-9]+):([0-9]+):([0-9]+)$', '0:\\3') }},
          Filesystem Type: {{ mount_details.fstype | default('N/A') }},
          Size: {{ (mount_details.size_total | default(0) / 1024 / 1024 / 1024) | round(2) }} GB
