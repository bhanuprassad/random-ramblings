---
- name: Identify filesystems and their corresponding SCSI devices in RedHat Guest OS
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Gather filesystem mount information
      ansible.builtin.command:
        cmd: df -hT
      register: df_output

    - name: Display filesystem mount information
      ansible.builtin.debug:
        var: df_output.stdout_lines

    - name: Gather detailed block device information
      ansible.builtin.command:
        cmd: lsblk -P -o NAME,HCTL,TYPE,SIZE,MODEL,MOUNTPOINT,FSTYPE
      register: lsblk_output

    - name: Display detailed block device information
      ansible.builtin.debug:
        var: lsblk_output.stdout_lines

    - name: Gather volume group information
      ansible.builtin.command:
        cmd: vgs --noheadings -o vg_name,pv_name
      register: vgs_output

    - name: Display volume group information
      ansible.builtin.debug:
        var: vgs_output.stdout_lines

    - name: Correlate filesystem, VG, and SCSI device information with filtering
      ansible.builtin.shell: |
        echo "Filesystem and SCSI Device Correlation:"
        valid_disk_found=0
        df -hT | tail -n +2 | while read -r fs type size used avail usep mounted; do
          if [[ "$type" == "xfs" || "$type" == "ext4" ]]; then
            if [[ "$mounted" != "/boot" && "$mounted" != "/boot/efi" ]]; then
              dev=$(df --output=source "$mounted" | tail -n 1)
              vg=$(lvdisplay "$dev" 2>/dev/null | grep "VG Name" | awk '{print $3}')
              if [[ "$vg" != "vg0" && "$vg" != "vg00" ]]; then
                scsi=$(lsblk -P -o NAME,HCTL,TYPE,SIZE,MODEL,MOUNTPOINT,FSTYPE | grep "MOUNTPOINT=\"$mounted\"")
                scsi_info=$(echo "$scsi" | awk -F'HCTL="' '{print $2}' | awk -F'"' '{print $1}')
                if [[ "$scsi_info" =~ ^[0-9]+:[0-9]+:[0-9]+:[0-9]+$ ]]; then
                  channel=$(echo "$scsi_info" | awk -F: '{print $2}')
                  target=$(echo "$scsi_info" | awk -F: '{print $3}')
                  scsi_info="$channel:$target"
                else
                  scsi_info="N/A"
                fi
                echo "Mount Point: $mounted"
                echo "Device: $dev"
                echo "Volume Group: $vg"
                echo "SCSI Info: $scsi_info"
                echo ""
                valid_disk_found=1
              fi
            fi
          fi
        done
        if [[ "$valid_disk_found" -eq 0 ]]; then
          echo "No valid disk present other than vg0 or vg00"
        fi
      register: correlation_output

    - name: Display correlated information
      ansible.builtin.debug:
        var: correlation_output.stdout_lines
